#include <stdio.h>
void firstFit(int blockSize[], int m, int processSize[], int n) {
    int allocation[m];
    for (int i = 0; i < m; i++) {
        allocation[i] = -1;
    }
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            if (blockSize[j] >= processSize[i] && allocation[j] == -1) {
                allocation[j] = i;
                printf("Process %d allocated to Block %d\n", i+1, j+1);
                break;
            }
        }
    }

    printf("\nBlock Allocation Result:\n");
    for (int i = 0; i < m; i++) {
        if (allocation[i] != -1) {
            printf("Block %d -> Process %d\n", i+1, allocation[i]+1);
        } else {
            printf("Block %d -> Not Allocated\n", i+1);
        }
    }
}

int main() {
    int m, n;

    printf("Enter the number of blocks: ");
    scanf("%d", &m);
    printf("Enter the number of processes: ");
    scanf("%d", &n);
    int blockSize[m], processSize[n];
    printf("Enter the sizes of the blocks:\n");
    for (int i = 0; i < m; i++) {
        printf("Block %d: ", i + 1);
        scanf("%d", &blockSize[i]);
    }
    printf("Enter the sizes of the processes:\n");
    for (int i = 0; i < n; i++) {
        printf("Process %d: ", i + 1);
        scanf("%d", &processSize[i]);
    }

    // Call the first fit function
    firstFit(blockSize, m, processSize, n);

    return 0;
}
